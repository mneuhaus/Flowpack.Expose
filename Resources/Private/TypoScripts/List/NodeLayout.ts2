prototype(TYPO3.Expose:ContentRecordList) < prototype(TYPO3.Expose:RecordList) {
	prototype(TYPO3.Expose:GlobalControllerLinks) {
		10.arguments.type = 'TYPO3\\TYPO3CR\\Domain\\Model\\NodeInterface'
	}
}
// prototype(TYPO3.Expose:ContentRecordList) << 50.TYPO3\Expose\TypoScript\Processors:nodeTree()

// adjustments for TYPO3CR Nodes
TYPO3.Expose.ContentListController.index = TYPO3.Expose:ContentRecordList

TYPO3.Expose.ContentListController {
	prototype(TYPO3.Expose:LocalControllerLink) {
		arguments.type = 'TYPO3\\TYPO3CR\\Domain\\Model\\NodeInterface'
		arguments.object = ${item.contextPath}
	}
}

prototype(TYPO3.Expose:RecordList.List.Element).node {
	@position = '10'
	condition = ${q(item).is('[ instanceof TYPO3.Neos.ContentTypes:AbstractNode]')}
	type = 'TYPO3.Expose:RecordList.List.NodeElement'
}

prototype(TYPO3.Expose:RecordList.List.NodeElement) < prototype(TYPO3.Expose:RecordList.List.DefaultElement) {
	templatePath = 'resource://TYPO3.Expose/Private/Elements/List/NodeElement.html'

	teaser = TYPO3.Expose:RecordList.NodeTeaser
}

prototype(TYPO3.Expose:RecordList.NodeTeaser) < prototype(TYPO3.TypoScript:Case) {
	default = TYPO3.Expose:IgnoreMissingTypeMatcher {
		condition = ${true}
		type = ${q(node).property('_contentType.name') + 'Preview'}
		@override.node = ${item}
	}
}
